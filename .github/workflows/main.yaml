name: Check New Blog Post

on:
  schedule:
    - cron: '0 12 * * *'  # 매일 대한민국 시간으로 아침 9시에 실행 (UTC 기준 오후 12시)
  workflow_dispatch:

jobs:
  check_blog_post:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4

    - name: Run script and set output
      id: run-script  # 이 id는 다음 단계에서 이 단계의 출력에 액세스하기 위해 사용됩니다.
      run: |
        output=$(python main.py | sed ':a;N;$!ba;s/\n/::/g')
        echo "new-posts=${output}" >> $GITHUB_ENV
        echo "::set-output name=new-posts::${output}"

    - name: Create GitHub Issue for new posts
      if: steps.run-script.outputs.new-posts  # 새 게시물이 있을 때만 이 단계를 실행합니다.
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const links = steps.run-script.outputs.new-posts.split('::').join('\n');
          if (links) {
            const issueTitle = "New Blog Posts Detected!";
            const issueBody = `New posts have been detected:\n\n${links.split('\n').map(link => `- ${link}`).join('\n')}`;
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody
            });
          }

