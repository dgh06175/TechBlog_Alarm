name: 새로운 블로그 포스트 확인

on:
  schedule:
    - cron: '0 11 * * *'
  workflow_dispatch:

jobs:
  check_blog_post:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4

    - name: Check for new blog posts and update text files
      run: |
        output=$(python main.py | sed ':a;N;$!ba;s/\n/::/g')
        if [ -z "$output" ]; then
          echo "No new posts found."
        else
          echo "NEW_POSTS=$output" >> $GITHUB_ENV
        fi

    - name: Commit and push changes if new posts are found
      if: env.NEW_POSTS != ''
      run: |
        git config --global user.name 'dgh06175'
        git config --global user.email 'dgh06175@gmail.com'
        git add pastData/*.txt
        git commit -m "새로운 블로그 포스트 기록 텍스트 파일 업데이트"
        git push

    - name: Create GitHub Issue for new posts
      if: env.NEW_POSTS != ''
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.TECHBLOG_ALARM_ISSUE_ACTION_TOKEN }}
        script: |
          const currentDate = new Date();
          const formattedDate = `${currentDate.getFullYear()}.${currentDate.getMonth() + 1}.${currentDate.getDate()}`;
          const DATA = process.env.NEW_POSTS.split('::').join('\n');
          if (DATA) {
            const issueTitle = `새로운 블로그 게시글이 올라왔습니다! [${formattedDate}]`;
            const issueBody = `## 새로운 블로그 게시글 목록\n\n${DATA.split('\n').map(link => `${link}`).join('\n')}`;
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody
            });
          }
