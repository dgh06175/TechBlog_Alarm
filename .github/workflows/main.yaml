name: 새로운 블로그 게시글 확인

on:
  schedule:
    - cron: '0 22 * * *'
  workflow_dispatch:

jobs:
  check_blog_post:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4

    - name: Check for new blog posts and update text files
      run: |
        output=$(python main.py | sed ':a;N;$!ba;s/\n/::/g')
        if [ -z "$output" ]; then
          echo "새로운 게시글이 없습니다."
        else
          echo "NEW_POSTS=$output" >> $GITHUB_ENV
        fi

    - name: Commit and push changes if new posts are found
      if: env.NEW_POSTS != ''
      run: |
        git config --global user.name 'dgh06175'
        git config --global user.email 'dgh06175@gmail.com'
        git add pastData/*.txt
        git commit -m "새로운 블로그 포스트 기록 텍스트 파일 업데이트"
        git push

    - name: Create GitHub Issue for new posts
      if: env.NEW_POSTS != ''
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.TECHBLOG_ALARM_ISSUE_ACTION_TOKEN }}
        script: |
          const currentDate = new Date();
          const formattedDate = `${currentDate.getFullYear()}.${currentDate.getMonth() + 1}.${currentDate.getDate() + 1}`;

          const DATA = process.env.NEW_POSTS.split("::");
          console.log("DATA:", DATA); // 데이터 확인 로그
          const blogNames = [];
          let issueBody = "";
          if (DATA) {
            DATA.forEach(post => {
                console.log("Processing post:", post); // 각 포스트 처리 확인 로그
                if (!post || post.trim() === '') return;

                const [blogName, postTitle] = post.split("::::");
                console.log("Extracted blogName and postTitle:", blogName, postTitle); // 추출된 블로그 이름 및 게시글 제목 확인 로그
                if (!blogName || !postTitle) return;

                const formattedBlogName = blogName.replace('### ', '').trim();
                console.log("Formatted blog name:", formattedBlogName); // 포맷된 블로그 이름 확인 로그
                if (!blogNames.includes(formattedBlogName)) {
                    blogNames.push(formattedBlogName);
                }

                issueBody += `### ${formattedBlogName}\n\n${postTitle}\n\n`;
            });

            console.log("Final issue body:", issueBody); // 최종 issueBody 확인 로그
            const header = `## 새로운 ${blogNames.join(', ')} 블로그 게시글 이 올라왔습니다!`;
            const issueTitle = `${header} [${formattedDate}]`;
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody
            });
          }
